heat_template_version: 2014-10-16

#
# you can deploy this template using the following command:
# 'heat stack-create -f syseleven.yaml <stack_name>'
#
# after successful stack creation you can login with 
# ssh -l <yourUser> <loadbalancerIP> 
# 

description: A template to deploy and configure a full blown server setup..
  For demonstration pruposes there are some shell scripts that provision these servers. 
  In production system we recommend to use tools like puppet, chef or salt for that.

parameters:
  number_appservers: 
    type: string
    default: 4
  number_dbservers: 
    type: string
    default: 1
  public_network_id:
    type: string
    default: 4c23774c-395b-49d0-b8e1-347e886fa9bf 

resources:
  syseleven_net:
    type: OS::Neutron::Net
    properties: 
      name: syseleven-net

  syseleven_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: syseleven_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: syseleven_net}
      ip_version: 4
      cidr: 192.168.2.0/24
      allocation_pools:
      - {start: 192.168.2.10, end: 192.168.2.250}

  syseleven_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }, "enable_snat": true}

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ syseleven_subnet, syseleven_router ]
    properties:
      router_id: { get_resource: syseleven_router }
      subnet: { get_resource: syseleven_subnet }

  ### LB Node as resource group ###
  #######################
  lb_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ syseleven_net, syseleven_subnet ]
    properties:
      count: 1 
      resource_def: 
        type: lb.yaml
        properties:
          name: lb%index%
          syseleven_net: { get_resource: syseleven_net }
          public_network_id: { get_param: public_network_id }

  ### Appserver nodes as resource group ###
  #######################
  appserver_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ syseleven_net, syseleven_subnet ]
    properties:
      count: { get_param: number_appservers } 
      resource_def: 
        type: appserver.yaml
        properties:
          name: app%index%
          syseleven_net: { get_resource: syseleven_net }
          public_network_id: { get_param: public_network_id }

  ### DBserver Nodes as resource group ###
  #######################
  dbserver_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ syseleven_net, syseleven_subnet ]
    properties:
      count: { get_param: number_dbservers } 
      resource_def: 
        type: dbserver.yaml
        properties:
          name: db%index%
          syseleven_net: { get_resource: syseleven_net }
