heat_template_version: 2014-10-16

# Start this template using
# 'heat stack-create -f singleServerWithVolume.yaml <stackName>'.
# You need to adjust "key_name" and "floating_network".
# You can login via ssh using the following command:
# ssh ec2-user@<IP-Address>

description: Simple template to deploy a single compute instance, create a volume and attach this volume.

parameters:
  public_network_id:
    type: string
    default: caf8de33-1059-4473-a2c1-2a62d12294fa 
  key_name:
    type: string

resources:

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Open SSH and Ping traffic.
      name: single-server-security-group 
      rules:
        - { remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 22, port_range_max: 22 }
        - { remote_ip_prefix: 0.0.0.0/0, protocol: icmp } 

  my_instance:
    type: OS::Nova::Server
    properties:
      config_drive: true
      name: machine with volume
      user_data_format: RAW
      key_name: { get_param: key_name }
      image: Ubuntu 16.04 sys11-cloudimg amd64
      flavor: m1.micro
      networks:
        - port: { get_resource: example_port }

# create an empty volume 
  my_volume:
   type: OS::Cinder::Volume
   properties:
     description: test volume 
     name: test volume
     size: 100 

# attach volume to a server
  my_volume_attach:
    depends_on: [ my_instance, my_volume ]
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: my_instance }
      volume_id: { get_resource: my_volume }

  example_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: example_net}
      security_groups: [{ get_resource: server_security_group }]

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }}
      name: example_router

  router_subnet_bridge:
    type: OS::Neutron::RouterInterface
    depends_on:  example_subnet
    properties:
      router: { get_resource: router }
      subnet: { get_resource: example_subnet }

  example_test_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network_id }
      port_id: { get_resource: example_port }

  example_net:
    type: OS::Neutron::Net
    properties: 
      name: example-test-net

  example_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: example_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network: {get_resource: example_net}
      ip_version: 4
      cidr: 10.0.0.0/8
      allocation_pools:
        - {start: 10.0.0.10, end: 10.0.0.250}


