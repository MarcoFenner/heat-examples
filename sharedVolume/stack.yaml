heat_template_version: 2015-04-30

description: Simple template to deploy two nodes with NFS share

parameters:
  number_nfsclients: 
    type: string
    default: 2
  public_network_id:
    type: string
    default: b68b2797-fe8d-4a4d-b40a-780ddb505909 
  volume_id:
    type: string

resources:
  syseleven_net:
    type: OS::Neutron::Net
    properties: 
      name: syseleven-net

  syseleven_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: syseleven_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: syseleven_net}
      ip_version: 4
      cidr: 10.10.10.0/24
      allocation_pools:
      - {start: 10.10.10.2, end: 10.10.10.10}

  syseleven_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }, "enable_snat": true}

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ syseleven_subnet, syseleven_router, syseleven_net ]
    properties:
      router_id: { get_resource: syseleven_router }
      subnet: { get_resource: syseleven_subnet }

  ### NFS Node as resource group ###
  #######################
  nfs_nodes:
    type: OS::Heat::ResourceGroup
    depends_on: [ syseleven_net, syseleven_subnet, router_subnet_connect ]
    properties:
      count: 1
      resource_def: 
        type: nfs-server.yaml
        properties:
          name: nfs-server%index%
          syseleven_net: { get_resource: syseleven_net }
          public_network_id: { get_param: public_network_id }
          volume_id: { get_param: volume_id } 

  ### Server Node as resource group ###
  #######################
  server_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ syseleven_net, syseleven_subnet, router_subnet_connect ]
    properties:
      count: { get_param: number_nfsclients }
      resource_def: 
        type: nfs-client.yaml
        properties:
          name: nfs-client%index%
          syseleven_net: { get_resource: syseleven_net }

