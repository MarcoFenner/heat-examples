heat_template_version: 2014-10-16

#
# You have to prepare two parameters before you can start this stack:
# 1. a public network id. 
# 2. a reserved, but not assigned ip address from this net.
#
# you can get a list of Network-IDs with the following command:
# 'neutron net-list'
# you get a list of floating IPs with this command:
# 'neutron floatingip-list'
# if no IP is already reserved for your project, you can do so using this command:
# 'neutron floatingip-create <networkNameOrID>'
#
# you can deploy this template using the following command:
# 'heat stack-create -f example.yaml -P key_name=<my_key> -P fixed_ip=<ipID> -P rpublic_network_id=<sameNetworkAsReserveddIP> <stack_name>'
#
# after successful stack creation you can login with 
# ssh -l ec2-user <externalIP> 
# 

description: Template to deploy a single compute instance
  with external network (login will be possible through vnc console and via SSH).
  Use it with caution, you break the most important feature in OpenStack... to 
  deploy your setup more than once. 

parameters:
 key_name:
  type: string
 fixed_ip:
  type: string
 public_network_id:
  type: string

resources:
  my_instance:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: Ubuntu 14.04 sys11-cloudimg amd64
      flavor: m1.small
      networks:
        - port: { get_resource: example_port }

  allow_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming admin traffic from anywhere.
      name: allow incoming
      rules: 
        - {direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp}
        - direction: ingress
          protocol: icmp

  example_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: example_net}
      security_groups: [ {get_resource: allow_ssh}, default ]

  example_net:
    type: OS::Neutron::Net
    properties: 
      name: example-net

  example_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: example_subnet
      dns_nameservers:
        - 37.123.105.116
        - 37.123.105.117
      network_id: {get_resource: example_net}
      ip_version: 4
      cidr: 10.0.0.0/24
      allocation_pools:
      - {start: 10.0.0.10, end: 10.0.0.250}

  example_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network_id }, "enable_snat": true}
      name: example_natpoint

  router_subnet_bridge:
    type: OS::Neutron::RouterInterface
    depends_on:  example_subnet 
    properties:
      router_id: { get_resource: example_router }
      subnet: { get_resource: example_subnet }

  associate_my_ip:
    type: OS::Nova::FloatingIPAssociation
    depends_on: [ my_instance, router_subnet_bridge ]
    properties:
      floating_ip: { get_param: fixed_ip }
      server_id: { get_resource: my_instance }

