heat_template_version: 2016-04-08
#
# you can deploy this template using the following command:
# 'openstack stack create -t example.yaml -e example-env.yaml <Stack Name>'
# 
# after successful stack creation you can log in with 
# ssh -l syseleven <externalIP> 
# 

description: Stack that launches a single server

parameters:
  public_network:
    type: string
    constraints:
      - custom_constraint: neutron.network
  security_group:
    type: string
    constraints:
      - custom_constraint: neutron.security_group
  image:
    type: string
  flavor:
    type: string
  ssh_keys:
    type: comma_delimited_list

resources:

  host:
    type: OS::Nova::Server
    depends_on: [ cloud-init-config, port ]
    properties:
      name: 
        list_join: [ '-', [ { get_param: "OS::stack_name" }, 'example-server' ]]
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }    
      image: { get_param: image } 
      flavor: { get_param: flavor } 
      networks:
        - port: { get_resource: port }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
    cloud_config:
      manage_etc_hosts: true
      users:
        - name: syseleven
          gecos: syseleven Stack user
          sudo: ALL=(ALL) NOPASSWD:ALL
          shell: /bin/bash
          lock-passwd: false
          ssh-authorized-keys: { get_param: ssh_keys }  

  net:
    type: OS::Neutron::Net
    properties: 
      name: 
        list_join: [ '-', [ { get_param: "OS::stack_name" }, 'example-net' ]]

  subnet:
    type: OS::Neutron::Subnet
    depends_on: [ net ]
    properties:
      name: 
        list_join: [ '-', [ { get_param: "OS::stack_name" }, 'example-subnet' ]]
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network: { get_resource: net }
      ip_version: 4
      cidr: 10.0.0.0/24
      allocation_pools:
      - {start: 10.0.0.10, end: 10.0.0.250}

  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network }}
      name: 
        list_join: [ '-', [ { get_param: "OS::stack_name" }, 'example-router' ]]

  router_subnet_bridge:
    type: OS::Neutron::RouterInterface
    depends_on: [ router, subnet ]
    properties:
      router: { get_resource: router }
      subnet: { get_resource: subnet }

  port:
    type: OS::Neutron::Port
    depends_on: [ net ]
    properties:
      network: { get_resource: net }
      security_groups: [ get_param: security_group ]

  floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on: [ port, router_subnet_bridge ]
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: port }
      
